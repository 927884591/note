(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{446:function(s,a,t){"use strict";t.r(a);var r=t(62),n=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"javascript高级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript高级"}},[s._v("#")]),s._v(" javascript高级")]),s._v(" "),t("h3",{attrs:{id:"浏览器运行的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器运行的原理"}},[s._v("#")]),s._v(" 浏览器运行的原理")]),s._v(" "),t("p",[s._v("经过dns来解析域名得到一个ip地址，得到ip地址然后到服务器获取index.html文件，而这个文件会有很多的依赖文件，例如有css，js文件，遇到这些文件，浏览器也会向服务器请求这些文件，并下载下来。")]),s._v(" "),t("p",[s._v("![image-20220323135005135](/Users/happy/Library/Application Support/typora-user-images/image-20220323135005135.png)")]),s._v(" "),t("p",[s._v("下载下来的文件然后经过浏览器内核解析，下图是浏览器的解析过程")]),s._v(" "),t("p",[s._v("![image-20220323140617165](/Users/happy/Library/Application Support/typora-user-images/image-20220323140617165.png)")]),s._v(" "),t("blockquote",[t("p",[s._v("浏览器最重点的还是javascript，而js文件是由js引擎执行，以下引出js引擎")])]),s._v(" "),t("h2",{attrs:{id:"chrome-v8引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chrome-v8引擎"}},[s._v("#")]),s._v(" chrome V8引擎")]),s._v(" "),t("blockquote",[t("p",[s._v("简介")])]),s._v(" "),t("p",[s._v("![ ](/Users/happy/Library/Application Support/typora-user-images/image-20220323153204536.png)")]),s._v(" "),t("h3",{attrs:{id:"v8引擎的预解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8引擎的预解析"}},[s._v("#")]),s._v(" v8引擎的预解析")]),s._v(" "),t("blockquote",[t("p",[s._v("有些函数，如果我们没有执行到它，其实我们是没有必要解析它的，这个预解析的目的就是为了提高性能，类似于懒加 载，用到了才去解析lazy-parser")])]),s._v(" "),t("p",[s._v("![image-20220323154705923](/Users/happy/Library/Application Support/typora-user-images/image-20220323154705923.png)")]),s._v(" "),t("h2",{attrs:{id:"js引擎在编译时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js引擎在编译时"}},[s._v("#")]),s._v(" js引擎在编译时")]),s._v(" "),t("p",[s._v("定义的普通的变量会全部为undefind，执行代码的时候才会给变量正确的赋值  而函数在编译时函数里面保存着两个东西。")]),s._v(" "),t("ol",[t("li",[s._v("函数的父级作用域")]),s._v(" "),t("li",[s._v("函数的执行体，")]),s._v(" "),t("li",[s._v("函数在调用的时候才会编译，所以我们可以看到函数的调用时可以提前。")]),s._v(" "),t("li",[s._v("函数执行完后会销毁")])]),s._v(" "),t("blockquote",[t("p",[s._v("在全局变量中，因为函数是一个引用类型，所以全局变量保存的是函数的地址。")])]),s._v(" "),t("p",[s._v("![image-20220409131409677](/Users/happy/Library/Application Support/typora-user-images/image-20220409131409677.png)")]),s._v(" "),t("h2",{attrs:{id:"js中的变量查规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js中的变量查规则"}},[s._v("#")]),s._v(" js中的变量查规则")]),s._v(" "),t("p",[s._v("这里得提到作用域链，作用域链是当前的作用域加上父级的作用域。所以作用域链是可以一层一层往上找的")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yes"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//相对于foo1函数来说说父级作用域")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//向上级作用域去找")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("blockquote",[t("p",[s._v("函数在编译的时候已经确定了父级作用域，函数在定义的时候就已经确定了作用域，而不是取决于函数的调用的位置")])]),s._v(" "),t("h2",{attrs:{id:"内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[s._v("#")]),s._v(" 内存管理")]),s._v(" "),t("p",[s._v("内存管理有以下的生命周期")]),s._v(" "),t("ol",[t("li",[s._v("申请需要的内存")]),s._v(" "),t("li",[s._v("使用内存")]),s._v(" "),t("li",[s._v("释放内存")])]),s._v(" "),t("p",[s._v("有自动管理的编程程序语言，也有手动管理的语言例如c，c++")]),s._v(" "),t("h3",{attrs:{id:"js的内存管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js的内存管理"}},[s._v("#")]),s._v(" js的内存管理")]),s._v(" "),t("ol",[t("li",[s._v("js的基本数据类型会存放到栈结构中")]),s._v(" "),t("li",[s._v("js的复杂数据类型会放到堆数据类型中")])]),s._v(" "),t("p",[s._v("![image-20220410011315967](/Users/happy/Library/Application Support/typora-user-images/image-20220410011315967.png)")]),s._v(" "),t("p",[s._v("定义了一个复杂类型的话栈结构中会存放堆结构里的内存地址。")]),s._v(" "),t("h3",{attrs:{id:"js中的垃圾回收器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js中的垃圾回收器"}},[s._v("#")]),s._v(" js中的垃圾回收器")]),s._v(" "),t("p",[s._v("内存自动管理的编程语言中都会有垃圾回收器。垃圾回收器主要有两个算法")]),s._v(" "),t("ol",[t("li",[s._v("引用计数  //如果当前对象的引用为0则垃圾回收器就会把他回收掉")]),s._v(" "),t("li",[s._v("标记清除。 //使用图遍历，如果不可以达则，就把这个对象消除掉")])]),s._v(" "),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),t("p",[s._v("js中函数是一等公民，所以js中函数是可以很灵活的去使用。")]),s._v(" "),t("p",[s._v("高阶函数：一个函数把另外的一个函数作为参数，或者函数的返回值为一个函数的话，就叫高阶函数")]),s._v(" "),t("h2",{attrs:{id:"js中的闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js中的闭包"}},[s._v("#")]),s._v(" js中的闭包")]),s._v(" "),t("p",[s._v("闭包其实就是一个函数，而且这个函数里也嵌套着一个或多个函数，函数的父级作用域里包含了一些变量，如果当前函数中没有该变量则会去父级作用域中找。如果有，这个父级作用域就不会被销毁，因为有函数引用到这个变量。这时候闭包就会形成。而闭包又个很大的特点就是闭包可能会导致内存泄漏。")]),s._v(" "),t("blockquote",[t("p",[s._v("简单的来说：如果一个函数可以访问到外层作用域，那它就是一个闭包")]),s._v(" "),t("p",[s._v("狭义一点的说，如果函数有访问到外层作用域的变量才是闭包")])]),s._v(" "),t("h3",{attrs:{id:"闭包的内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包的内存泄漏"}},[s._v("#")]),s._v(" 闭包的内存泄漏")]),s._v(" "),t("blockquote",[t("p",[s._v("函数执行完后，理应被销毁，而应该被销毁又没有销毁，这个就称为内存泄漏")])])])}),[],!1,null,null,null);a.default=n.exports}}]);